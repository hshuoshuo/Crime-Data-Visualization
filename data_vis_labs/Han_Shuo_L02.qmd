---
title: "L02 ggplot 1"
subtitle: "Data Visualization (STAT 302)" 
author: "Shuo Han"

format:
  html:
    toc: true
    embed-resources: true
    link-external-newwindow: true

execute:
  warning: false

from: markdown+emoji 
---

## Datasets

For this activity we will be using the `blue_jays`, `BA_degrees`, `dow_jones_industrial` and `cdc` data set that should be located in your `/data` subdirectory. An explanation of the variables in the data set are provided below in their respective Exercises.


```{r}
#| label: load-packages

# Load package(s)
library(tidyverse)
library(lubridate)

# load data

# Load rda data files
load("data/BA_degrees.rda")
load("data/blue_jays.rda")
load("data/dow_jones_industrial.rda")

#load txt data file
cdc_data <- read_delim("data/cdc.txt", delim="|") %>%
  mutate(
    genhlth = factor(genhlth, 
                     levels = c("excellent", "very good", "good", "fair", "poor"))
  )
```


## Exercise 1

We'll be using data from the `blue_jays.rda` dataset to answer the following questions and construct the following plots. 

Below is a description of the variables contained in the dataset.

* `BirdID` - ID tag for bird
* `KnownSex` - Sex coded as F or M
* `BillDepth` - Thickness of the bill measured at the nostril (in mm)
* `BillWidth` - Width of the bill (in mm)
* `BillLength` - Length of the bill (in mm)
* `Head` - Distance from tip of bill to back of head (in mm)
* `Mass` - Body mass (in grams)
* `Skull` - Distance from base of bill to back of skull (in mm)
* `Sex` - Sex coded as `0 = female` or `1 = male`

<br>

### Question 1.1

Three commonly used aesthetics for enhancing a graphic are color, size, and shape. We can either map variables or fixed values to these.

In the `blue_jays` dataset which variables would be appropriate to map to the `size` aesthetic? The `shape` aesthetic? The `color` aesthetic?

:::callout-tip

## Solution

  *`size`: variable Mass, BillDepth, BillWidthï¼ŒBillLength, Head, and Skull should be mapped to size as continuous variables.
  *`shape`: variable KnownSex and Sex should be mapped to shape as categorical variables.
  *`color`: variable KnownSex and Sex should be mapped to shape as categorical variables.
:::


<br>

### Plot 1

Construct a scatterplot of `Head` by `Mass` with the following criteria:

- `color` aesthetic set to Northwestern purple (`#4E2A84`)
- `shape` aesthetic set a solid/filled triangle
- `size` aesthetic set to 2.

```{r}
ggplot(blue_jays, aes(Mass, Head))+
  geom_point(color="#4E2A84", shape=17, size=2) +
  ggtitle("Blue Jays: Head vs Mass")
```

<br>

### Plot 2

Construct a scatterplot of `Head` by `Mass` with the following criteria:

- `size` aesthetic to 2.
- Either `Sex` or `KnownSex` mapped to the `color` aesthetic.

```{r}
ggplot(blue_jays, aes(Mass, Head, color=Sex))+
  geom_point(size=2)+
  ggtitle("Blue Jays: Head vs Mass")

ggplot(blue_jays, aes(Mass, Head, color=KnownSex))+
  geom_point(size=2)+
  ggtitle("Blue Jays: Head vs Mass")
```

<br>

### Question 1.2

Was it more appropriate to map `Sex` or `KnownSex` to the `color` aesthetic in Plot 2 and why?

:::callout-tip

## Solution
I think it is more appropriate to map the color aesthetic in Plot KnownSex, which treats sex as a factor instead of integer, since the variable sex in the data only includes female and male and we can get only two mappings for male and female for sex comparison, but there are multiple mappings for sex with Sex and we get only two sexsThus, for the provided dataset, KnowSex is more appropriate and clear.

:::
<br>

### Question 1.3

Consider the `color` aesthetic in Plot 1 and Plot 2 above. **Explain why** these two usages of the `color` aesthetic are meaningfully different. 
:::callout-tip

## Solution
The color set in the aes() means the color for these points is decided by values of the parameter of color.
The color set in the geom_point() means the color of points in the graph is determined by the value of the color aesthetic.
Thus, color in the first plot shows no information correlated to the data, but color in the second plot is connected with the data.
:::
<br>

## Exercise 2

We'll be using data from the `BA_degrees.rda` which is already in the `/data` subdirectory in our **data_vis_labs** project. Below is a description of the variables contained in the dataset.

`BA_degrees.rda`

* `field` - field of study
* `year_str` - academic year (e.g. 1970-71)
* `year` - closing year of academic year
* `count` - number of degrees conferred within a field for the year
* `perc` - field's percentage of degrees conferred for the year


```{r}
#| label: ex-2-data-wrangle

# Wrangling for plotting
ba_data <- BA_degrees %>%
  # mean % per field
  group_by(field) %>%
  mutate(mean_perc = mean(perc)) %>%
  # Only fields with mean >= 5%
  filter(mean_perc >= 0.05) %>%
  # Organizing for plotting
  arrange(desc(mean_perc), year) %>%
  ungroup() %>%
  mutate(field = fct_inorder(field))
```

<br>

Using the `ba_data` dataset derived from `BA_degrees`, recreate the following graphics as precisely as possible.

### Plot 1
```{r}
ggplot(ba_data, aes(year, perc)) + 
  geom_line() + 
  facet_wrap(~field) + 
  labs(x="Year", y="Proportion of Degree")
```

<br>

### Plot 2

*Hints:*

- Transparency is 0.5
- Color used is`"red"`

```{r}
ggplot(ba_data, aes(year, perc)) + 
  geom_area(alpha = 0.5, fill = "red") +
  geom_line(color = "red") + 
  facet_wrap(~field) + 
  labs(x="Year", y="Proportion of Degree")
```

<br>

### Plot 3
```{r}
ggplot(ba_data, aes(year, perc, color=field)) + 
  geom_line() + 
  labs(x="Year", y="Proportion of Degree")
```

<br>

## Exercise 3

Using the `dow_jones_industrial` dataset, track the Dow Jones Industrial Average at close each day during 2009. Recreate the following graphics as precisely as possible.


```{r}
#| label: ex-3-data-wrangle

# Only keep observations within 2009 range
djia_date_range <- dow_jones_industrial %>%
  filter(
    date >= ymd("2009/01/01") & date < ymd("2010/01/01")
    )
```

<br>

### Plot 1

It will be easier to see the trend if we add a smooth fit line to the graph.

*Hints:*

- colors: "purple", "red", "green"
- Wiggliness for `loess` is 0.3

```{r}
#closing price of DJIA by date 
ggplot(djia_date_range, aes(date, close)) + 
  geom_line(size = 1, color="purple") + 
  geom_smooth(method = "loess", formula = y ~ x, span=0.3, fill = "red", color = "green") +
  xlab(NULL) + 
  ylab("Dow Jones Industrial Average")
```

<br>

### Plot 2

There are many different smoothing methods in statistics. By default `geom_smooth()` uses `loess`. 

Another extremely popular smoothing method in statistics is the use of splines. A spline function is a curve constructed from polynomial segments that are subject to conditions or continuity at their joints. Generally, a difficulty is you need to determine the number of `knots`, however this method is popular in predictive models.

Add a natural cubic spline smoother with `df = 6`.

*Hints:*

- need the `splines` package
- use method `"lm"` 
- `y ~ ns(x, 6)`

```{r}
ggplot(djia_date_range, aes(date, close)) + 
  geom_line() + 
  geom_smooth(method="lm", formula= y ~ splines::ns(x, 6), se = FALSE) + 
  labs(x=NULL, y="Dow Jones Industrial Average")
```

<br>

## Exercise 4

We'll be using the BRFSS (Behavioral Risk Factor Surveillance System) survey collected annually by the Centers for Disease Control and Prevention (CDC). The data can be found in the provided `cdc.txt` file --- place this file in your `/data` subdirectory. The dataset contains 20,000 complete observations/records of 9 variables/fields, described below.

* `genhlth` - How would you rate your general health? (excellent, very good, good, fair, poor)
* `exerany` - Have you exercised in the past month? (`1 = yes`, `0 = no`) 
* `hlthplan` - Do you have some form of health coverage? (`1 = yes`, `0 = no`) 
* `smoke100` - Have you smoked at least 100 cigarettes in your life time? (`1 = yes`, `0 = no`) 
* `height` -  height in inches
* `weight` - weight in pounds
* `wtdesire` - weight desired in pounds
* `age` - in years
* `gender` - `m` for males and `f` for females

<br>

Using the `cdc` dataset, we want to visualize the **distribution** between weight and gender based on general health. Recreate the Plot 1 and Plot 2 which represent 2 attempts at this. 

<br>

### Plot 1

*Hints:*

- Transparency is 0.2
- Horizontal axis should have lower limit of 50 and upper limit of 400
```{r}
ggplot(cdc_data,aes(weight, color = genhlth, fill = genhlth)) +
  geom_density(alpha = 0.2, na.rm = TRUE) + 
  xlim(50, 400) + 
  facet_wrap(~gender)
```

<br>

### Plot 2

*Hints:*

- Transparency is 0.4
```{r}
ggplot(cdc_data, aes(gender, weight, fill=gender)) + 
  geom_boxplot(alpha=0.4)+
  facet_grid(~genhlth)
```

<br>

### Plot 3

Choose one more way to visualize the **distribution** of weight based on gender and general health. (Many ways to do this). 

*Requirements:*

- The geom layer cannot be geom_boxplot() or geom_density()
- Appropriately label the x- and y- axis
- Add a title

```{r}
ggplot(cdc_data, aes(gender,weight,color=gender,fill=gender)) + 
  facet_grid(~genhlth)+
  geom_bar(stat = "summary_bin", fun = mean)+
  labs(
    x="Gender",
    y = "Average Weight",
    title = "Average weight under different gender and genhlth"
  )
```

<br>

### Question 4.1

Compare and contrast the different ways to visualize a distribution. In other words, when might you use a histogram vs density vs boxplot? Which did you find the most useful in interpreting the plots above?

:::callout-tip

## Solution
A density plot is good for visualizing the overall shape of the distribution, a histogram is good for visualizing the frequency and pattern of the data, and a box plot is good for comparing the distribution of multiple variables or identifying extreme values in the data. Thus, I might use density since it gives a better visualization of the overall dataset, which is the information we want right here instead of comparison of frequency.
:::
<br>

## Exercise 5

Using the `cdc` dataset, construct this plot in **two** ways. Once using `geom_bar()` and once using the `geom_col()`. May need to do some data wrangling for one of these.

::: {.callout-tip icon=false}

## Solution
```{r}
#| label: ex-5

# Plot 1: geom_bar() - raw data
ggplot(data=cdc_data, mapping = aes(x = fct_rev(genhlth))) +
  geom_bar() +
  labs(
    x = "General Health",
    y = "Count"
  )

# Plot 2: geom_col() -without calculation
cdc_counts <- cdc_data %>%
  count(genhlth)
ggplot(data=cdc_counts, mapping = aes(x = fct_rev(genhlth), y = n)) +
  geom_col() +
  labs(
    x = "General Health",
    y = "Count"
  )

```

:::

