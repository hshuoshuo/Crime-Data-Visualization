---
title: "L01 Introduction"
subtitle: "Data Visualization (STAT 302)" 
author: "YOUR NAME"

format:
  html:
    toc: true
    embed-resources: true
    link-external-newwindow: true

execute:
  warning: false
  echo: false

from: markdown+emoji 
---

::: {.callout-note}
**Make this document your own!** Meaning you should play with the layout and think about removing and adding items like sections (for example you should remove this callout block). Explore quarto markdown to add features like code-folding to your document.
:::

::: {.callout-warning}
This is a template file and may not contain everything seen in the instructions html (`L01_introduction.html`). For example, images or graphs are not usually included in the template. **Rely on the instructions html file for directions, not the template file.**
:::

## Goals

1.  Ensure software for this course is properly installed and functional
2.  Understand the importance of visualization
3.  Develop and follow a proper workflow
4.  Construct and explore a few plots using `ggplot2`
5.  Add layers to a plot that include title, axis, and pre-set themes

**Don't worry if you cannot do everything here by yourself.** You are just getting started and the learning curve is steep, but remember that the instructional team and your classmates will be there to provide support. Persevere and put forth an honest effort and this course will payoff.

```{r}
#| label: load-packages

# Load package(s)

# Data can go here as well
```

::: callout-tip
## Organization is important!

1.  All packages should always be loaded at the TOP of the document.

2.  All data should be in your `/data` subdirectory. Data loading should go at the top of the document under the libraries.
:::

## Tasks

Complete the following tasks. For many of these you'll need to simply **indicate that you have completed the task**.

### Task 1

Download and install [R Software](https://cran.rstudio.com/).

### Task 2

1.  Download and install [RStudio](https://www.rstudio.com/products/rstudio/download4/).
2.  Open RStudio and ensure it and R have been properly installed.
3.  Go to **Tools** \> **Global Options** and change the two indicated settings below and click **Apply**. Your other options are likely different than what is pictured. This is okay and we suggest you leave them as is until you become more familiar with RStudio.

**See html file for missing figure**

### Task 3

Take some time to explore the [Quarto](https://quarto.org/) and [ggplot2](https://ggplot2.tidyverse.org/index.html) websites. We suggest bookmarking them because they will be extremely useful references. 

We highly recommend reading through the [Tutorial: Hello, Quarto](https://quarto.org/docs/get-started/hello/rstudio.html).

### Task 4

Install the following packages:

-   `tidyverse`, actually it is a collection/universe of packages being installed
-   `skimr`
-   `devtools`

### Task 5

1.  Download `L01_introduction.zip` from Canvas.
2.  Unzip the file and place the `data_vis_labs` directory where you would like to keep all of your lab work for this course.
3.  Open RStudio and create a project folder for this *existing directory*.
4.  Rename `template_L01.qmd` to your `Lastname_Firstname_L01.qmd`
5.  Render the file with `Cmd/Ctrl + Shift + K` or click the Render button.

### Task 6 (optional)

If you are new to RStudio we strongly recommend reading through Chapters 1-4 of the [Stat 202 text book](https://nustat.github.io/intro-stat-data-sci/)

## Exercise 1

Let's delve into why data visualizations are important.

### Visualization 1

Read the following article and answer the following questions.

[bars_vs_grocery_stores](https://flowingdata.com/2014/05/29/bars-versus-grocery-stores-around-the-world/)

1) List one thing you learned from the article?

**YOUR ANSWER**

2) How did the main visualization (United States) enhance the article?

**YOUR ANSWER**

3) List at least one thing you liked about the [United States] graphic and one thing you think could be improved.

**YOUR ANSWER**

<br>

### Visualization 2

Open this [dashboard](https://edgarruiz.shinyapps.io/db-dashboard/) and answer the following questions.

1) What story is this dashboard telling and how do the visualizations enhance that?

**YOUR ANSWER**


2) What might a dashboard provide that a static graphic cannot.

**YOUR ANSWER**

## Exercise 2

Let's look at some interesting patterns in the history of LEGO! We'll be using data from the [`lego` package](https://github.com/seankross/lego) located `data/legosets.rda`.

First, let's look at the average cost of LEGO sets over time. The main variable of interest here is `USD_MSRP`, or the manufacturer's suggested retail price in constant dollars.

## Exercise 3

Let's explore how many unique themes LEGO now offers. 

```{r}
#| label: themes
#| echo: false
#| eval: false
 
# remove #| eval = FALSE so the plot appears 

theme_counts <- legosets %>%
  count(Theme)

theme_counts %>%
  ggplot(aes(y = Theme, x = n)) +
  geom_col() +    # or geom_bar(stat = "identity") +
  labs(
    x = "Number of Sets",
    y = NULL
  ) +
  theme_minimal()
```

What is bad/ugly about the plot above?

**YOUR ANSWER**

Now remake the plot BUT with the improvements addressing the issues you noted above.

## Exercise 4

Now you try, let's look at how the number of pieces per set has changed over time. Because Duplo sets are much smaller (since they're designed for toddlers), we made a special indicator variable for them shown in the code below.

Use an appropriate graph to plot the average number of pieces over time. Have either separate lines or separate plots for the Duplo and Lego categories. Be sure the title, x-axis, and y-axis are properly labeled. 

```{r}
#| label: lego-pieces
#| eval: false

# remove #| eval = FALSE or this chunk won't evaluate

pieces_per_year <- legosets %>%
  # new indicator variable
  mutate(Duplo = ifelse(Theme == "Duplo", "Duplo", "Lego"))
  # group_by() both year and Duplo
  # summarize() mean pieces

```

What trends do you notice in the plots? Are you surprised by the plots?

**YOUR ANSWER**
